var yakfunc, yakapp;

yakapp = {
	mapStyles: [],
	domColor: '#02253E',
	subColor: '#0177A8',
	hasCentered: false,
	lastMessage: 0,
	messageClass: 'odd',
	prettyPosition: 'Roamin\'',
	position:[38,-94]
};
yakfunc = {
	/* Default formating for grunt display; used in range infowindows, AJAXed grunts on herd#show, SSE render */
	messageDisplay: function(info){
		if(info.user_id !== yakapp.lastMessage){
			if(yakapp.messageClass === 'odd'){
				yakapp.messageClass = 'even';
			} else {
				yakapp.messageClass = 'odd';
			}
		}
		yakapp.lastMessage = info.user_id;
		if($.inArray(info.user_id, byah.localRetrieve('blockedUsers')) < 0 ){
			return '<li class="animated bounceInDown ' + yakapp.messageClass +'"><div class="message"><div class="yak" data-userid="' + info.user_id + '" data-date="' + info.created_at + '" style="background:' + info.user_color + '">' + info.user_name + '</div><div class="message-content"><p>' + info.message + '<span class="time-ago"> ' + info.time_ago +' ago</span></p><span class="tab"></span></div></div></li>';
		}
	},
	/* Marker that has a herd quick display in its infoWindow. Also has radius */
	customChatMarker: function(herddata, pos, map) {
		var customChatMarker, herderstring, herd_radius;

		map = byah.setDefault(map, yakapp.rangemap)

		herderstring = '<div class="quick-view">' + '<div class="quick-view-hdr">' + '<strong>Herd</strong>' + '</div><!-- /hdr -->'
		herderstring += '<ul class="chat-list">'
		$.each(herddata.grunts, function(key, val){
				herderstring += yakfunc.messageDisplay(val)
		});
		herderstring += '</ul>'
		herderstring += '<div class="quick-view-meta">' + herddata.yak_length + ' Yaks / ' + herddata.grunt_length + ' Grunts / ' + herddata.herd_radius + ' Miles</div><!-- /meta -->' + '<a class="i-chats yaaak" href="/herds/' + herddata.id + '">Yaaak</a>' + '</div><!-- /quick view -->'

		customChatMarker = new google.maps.Marker({
			position: pos,
			map: map,
			animation: google.maps.Animation.DROP,
			content: herderstring
		});
		google.maps.event.addListener(customChatMarker, 'click', function() {
			yakapp.customChatWindow.setContent(customChatMarker.content)
			return yakapp.customChatWindow.open(map, customChatMarker);
		});
		herd_radius = new google.maps.Circle({
			map: map,
			radius: parseInt(herddata.herd_radius * 1609.34),
			fillColor: yakapp.domColor,
			fillOpacity: 0.15,
			strokeColor: yakapp.subColor,
			strokeOpacity: 0.5
		});
		herd_radius.bindTo('center', customChatMarker, 'position');
		return customChatMarker;
	},
	/* Retrieve and set location with HTML5 API. Stores in yakapp.position as lat/lng array; also sets value on grunt input for geo lat/lng */
	setLocation: function() {
		return navigator.geolocation.getCurrentPosition((function(position) {
			var gmapsPosition, hasCentered;
			yakapp.position = [position.coords.latitude, position.coords.longitude];
			byah.localStore('position',[position.coords.latitude, position.coords.longitude]);
			$('#grunt_geo_long').val(position.coords.longitude)
			$('#grunt_geo_lat').val(position.coords.latitude)
			if($('body').hasClass('range')){
				gmapsPosition = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
				if(yakapp.hasCentered){
					return
				} else {
					yakapp.hasCentered = true
					yakapp.rangemap.panTo(gmapsPosition);
				}
			}
		}), function(error) {
			byah.notify('Lone ranger, get back on the beaten trail. We can\'t locate you.');
		});
	},
};

if(!byah.localRetrieve('blockedUsers')) byah.localStore('blockedUsers', new Array());